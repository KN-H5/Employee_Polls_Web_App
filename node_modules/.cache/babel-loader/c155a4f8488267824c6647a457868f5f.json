{"ast":null,"code":"var _jsxFileName = \"D:\\\\udacity-react-nanodegree-final-project-main\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\";\nimport { connect } from \"react-redux\";\nimport Card from \"../Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = _ref => {\n  let {\n    authedUser,\n    questions,\n    users\n  } = _ref;\n\n  const unanswered = question => !question.optionOne.votes.includes(authedUser.id) && !question.optionTwo.votes.includes(authedUser.id);\n\n  const answered = question => question.optionOne.votes.includes(authedUser.id) || question.optionTwo.votes.includes(authedUser.id);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mt-9\",\n      \"data-testid\": \"heading\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mt-6\",\n      children: \"New Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: questions.filter(unanswered).map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          question: question,\n          author: users[question.author]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mt-6\",\n      children: \"Answered Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: questions.filter(answered).map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          question: question,\n          author: users[question.author]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, question.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Dashboard;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    authedUser,\n    questions,\n    users\n  } = _ref2;\n  return {\n    authedUser,\n    questions: Object.values(questions).sort((a, b) => b.timestamp - a.timestamp),\n    users\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["connect","Card","Dashboard","authedUser","questions","users","unanswered","question","optionOne","votes","includes","id","optionTwo","answered","filter","map","author","mapStateToProps","Object","values","sort","a","b","timestamp"],"sources":["D:/udacity-react-nanodegree-final-project-main/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import { connect } from \"react-redux\";\nimport Card from \"../Card\";\n\nconst Dashboard = ({ authedUser, questions, users }) => {\n  const unanswered = (question) =>\n    !question.optionOne.votes.includes(authedUser.id) &&\n    !question.optionTwo.votes.includes(authedUser.id);\n\n  const answered = (question) =>\n    question.optionOne.votes.includes(authedUser.id) ||\n    question.optionTwo.votes.includes(authedUser.id);\n\n  return (\n    <div>\n      <h1 className=\"text-3xl font-bold mt-9\" data-testid=\"heading\">\n        Dashboard\n      </h1>\n\n      <h2 className=\"text-2xl font-bold mt-6\">New Questions</h2>\n      <ul className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {questions.filter(unanswered).map((question) => (\n          <li key={question.id}>\n            <Card question={question} author={users[question.author]} />\n          </li>\n        ))}\n      </ul>\n\n      <h2 className=\"text-2xl font-bold mt-6\">Answered Questions</h2>\n      <ul className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {questions.filter(answered).map((question) => (\n          <li key={question.id}>\n            <Card question={question} author={users[question.author]} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ authedUser, questions, users }) => ({\n  authedUser,\n  questions: Object.values(questions).sort((a, b) => b.timestamp - a.timestamp),\n  users,\n});\n\nexport default connect(mapStateToProps)(Dashboard);\n"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;;AAEA,MAAMC,SAAS,GAAG,QAAsC;EAAA,IAArC;IAAEC,UAAF;IAAcC,SAAd;IAAyBC;EAAzB,CAAqC;;EACtD,MAAMC,UAAU,GAAIC,QAAD,IACjB,CAACA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,QAAzB,CAAkCP,UAAU,CAACQ,EAA7C,CAAD,IACA,CAACJ,QAAQ,CAACK,SAAT,CAAmBH,KAAnB,CAAyBC,QAAzB,CAAkCP,UAAU,CAACQ,EAA7C,CAFH;;EAIA,MAAME,QAAQ,GAAIN,QAAD,IACfA,QAAQ,CAACC,SAAT,CAAmBC,KAAnB,CAAyBC,QAAzB,CAAkCP,UAAU,CAACQ,EAA7C,KACAJ,QAAQ,CAACK,SAAT,CAAmBH,KAAnB,CAAyBC,QAAzB,CAAkCP,UAAU,CAACQ,EAA7C,CAFF;;EAIA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,yBAAd;MAAwC,eAAY,SAApD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAI,SAAS,EAAC,yBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAI,SAAS,EAAC,uCAAd;MAAA,UACGP,SAAS,CAACU,MAAV,CAAiBR,UAAjB,EAA6BS,GAA7B,CAAkCR,QAAD,iBAChC;QAAA,uBACE,QAAC,IAAD;UAAM,QAAQ,EAAEA,QAAhB;UAA0B,MAAM,EAAEF,KAAK,CAACE,QAAQ,CAACS,MAAV;QAAvC;UAAA;UAAA;UAAA;QAAA;MADF,GAAST,QAAQ,CAACI,EAAlB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QANF,eAcE;MAAI,SAAS,EAAC,yBAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,eAeE;MAAI,SAAS,EAAC,uCAAd;MAAA,UACGP,SAAS,CAACU,MAAV,CAAiBD,QAAjB,EAA2BE,GAA3B,CAAgCR,QAAD,iBAC9B;QAAA,uBACE,QAAC,IAAD;UAAM,QAAQ,EAAEA,QAAhB;UAA0B,MAAM,EAAEF,KAAK,CAACE,QAAQ,CAACS,MAAV;QAAvC;UAAA;UAAA;UAAA;QAAA;MADF,GAAST,QAAQ,CAACI,EAAlB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CAlCD;;KAAMT,S;;AAoCN,MAAMe,eAAe,GAAG;EAAA,IAAC;IAAEd,UAAF;IAAcC,SAAd;IAAyBC;EAAzB,CAAD;EAAA,OAAuC;IAC7DF,UAD6D;IAE7DC,SAAS,EAAEc,MAAM,CAACC,MAAP,CAAcf,SAAd,EAAyBgB,IAAzB,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAAxD,CAFkD;IAG7DlB;EAH6D,CAAvC;AAAA,CAAxB;;AAMA,eAAeL,OAAO,CAACiB,eAAD,CAAP,CAAyBf,SAAzB,CAAf"},"metadata":{},"sourceType":"module"}